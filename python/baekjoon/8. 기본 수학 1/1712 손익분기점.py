# 1712 손익분기점
"""
A의 고정 비용
B의 가변 비용
a = 1000, b = 70, a+b = 1070 (한대), a+10b = 1700 (열대)
c = 노트북 한대의 가격
손익분기점 : 총 수입이 총 비용보다 많아지는 지점 (즉, 노트북 개수지점)

첫째 줄에 a,b,c가 주어진다.
손익분기점을 출력한다. 손익분기점이 존재하지 않으면 -1을 출력한다.

접근법
1. 손익분기점의 특성상 제작 비용보다 판매 비용이 높아야 발생한다.
2. 즉, 우선적으로 제작 비용과 판매 비용을 비교하는 논리회로를 구성한다.

1. map()함수로 a,b,c를 공백을 기준으로 나누어 변수로서 할당한다.
2. point는 c-b로 1대 판매시 순이익이다.
- if
    3. point < 0이라면, -1을 출력한다.
- elif
    4. point > 0이라면, a // point + 1로 손익분기점을 찾는다.
    (단, //의 특성상 소수점이 있을 시 내림을 하기에 + 1을 해준다.)
- else
    5. point = 0이라면, -1을 출력한다.

숙지가 필요한 항목
1. 손익분기점의 특성을 파악한다.
2. 너무 어려운 식을 사용할 필요는 없다. 어렵다면, 구하고 싶은 변수가 1일때를 생각해서 식을 세워보자.
3. point가 가질 수 있는 모든 변수를 생각해주자. (point = 0일 경우)
"""
a, b, c = map(int, input().split())
point = c-b

if point < 0:
    print(-1)
elif point > 0:
    print(a // point + 1)
else:
    print(-1)
