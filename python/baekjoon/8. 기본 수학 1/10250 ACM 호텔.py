# 10250 ACM 호텔
"""
호텔 정문과 가까운 곳을 찾는 프로그램
호텔은 직사각형 모양, 각 층에 w개의 방이 있는 h층 건물
엘리베이터는 가장 왼쪽에 있다. (정문에서 엘리베이터까지의 거리는 무시)
인접한 두 방 사이의 거리는 같은 거리(d)이며, 호텔의 정면 쪽에만 방이 있다.
방 번호는 yxx, yyxx 형태, y는 층수, x는 엘리베이터에서부터 세었을 때의 번호
고객의 선호도는 x가 작을수록 좋다.
단, x가 같으면 y가 작을수록 좋다.
n번째로 도착한 손님에게 배정될 방 번호를 계산하는 프로그램 작성

표준 입력에서 입력 데이터를 받는다. t개의 테스트 데이터
t는 맨 첫 줄에 주어진다.
각 테스트 데이터는 한 행으로 h, w, n의 세 정수를 포함한다.
이에 따른 방번호 출력

접근법
1. 논리구조를 살펴보면 아래에서 위로 순서대로 채워지고, 왼쪽에서 오른쪽으로 채워진다.
- for
    2. t만큼 반복
    3. h,w,n을 할당해주고, room_x를 1로 만들어준다. 여기서 room_x는 엘리베이터에서부터 세었을 때의 번호이다.
    - if
        4. 만약, n <= h 이면, 층수는 n이며, room_x는 1이다.
    - while
        5. n > h이면, n에서 h를 계속 빼주어서 n <= h일때까지 연산해야된다.
        6. 이때, 빼준 횟수만큼 거리가 늘어난다. 즉, room_x += 해준다.
        - if
            7. room_x < 10 이면, room_x 앞에 0이 붙어야 된다.
        - elif (else가 아닌 이유는 else를 사용하면 n > h인 경우도 작동하기 때문이다.)
            8. room_x >= 이면, room_x만 출력해도 된다.

숙지가 필요한 항목
1. 코드를 더 줄일 수 있을 것이다. 굳이 while문을 사용해야 될까?
2. 모든 경우의 수를 찾는 것이 중요하다. 예를 들어 n이 크거나 작거나 같을 때, room_x가 10보다 크거나 작거나 같을 때처럼 모든 경우를 찾는 것이 중요하다.

"""
t = int(input())

for i in range(t):
    h, w, n = map(int, input().split())
    room_x = 1
    if n <= h:
        print(str(n)+"0"+str(room_x))
    while n > h:
        n -= h
        room_x += 1
        if room_x < 10 and n <= h:
            print(str(n)+"0"+str(room_x))
        elif room_x >= 10 and n <= h:
            print(str(n)+str(room_x))