# 10809 알파벳 찾기
"""
알파벳 소문자로만 이루어진 단어 S
각각의 단어에 대해서,
단어에 포함되어 있는 경우에는 처음 등장하는 위치
단어에 포함되어 있지 않은 경우에는 -1을 출력하는 프로그램

a b c d ... x y z
등장 위치 or -1
첫번째 글자는 0번째, 두번째 글자는 1번째 위치이다.

접근법
1. 아스키코드의 숫자로 이루어진 리스트를 만든다.

- for 문으로 돌린다.
    2. 이를 chr()함수로 알파벳으로 변환한다.
    3. find() : 문자열이 왼쪽 끝부터 시작하여 몇 번째에 있는지 반환
    4. find()함수를 이용하여 알파벳이 처음으로 나오는 위치를 숫자(문자형)으로 반환한다.
    5. 비워둔 문자열에 숫자를 더한다.

숙지가 필요한 항목
1. 알파벳 리스트를 만들때에는 일일히 하는 것도 가능하지만 아스키코드를 이용하면 편하다.
2. 아스키코드의 숫자를 문자로 반환하는 함수는 chr()이며, 반대는 ord()이다.
3. find()함수는 문자열이 어디에 위치하는 지 반환하는 함수이다.
4. 반복문의 범위를 리스트로 지정하여 리스트의 값이 하나씩 할당하는 방식은 많이 사용된다.
"""
s = str(input())
alphabet = list(range(97,123))
result = ''

for i in alphabet:
    word = str(s.find(chr(i))) + ' '
    result += word
print(result)